<?php

if (!defined('TTA_CLASSES_PATH')) {
    define('TTA_CLASSES_PATH', drupal_get_path('module', 'wb_tta') . "/includes/classes/");
}
if (!defined('TTA_VIEWS_PATH')) {
    define('TTA_VIEWS_PATH', '/' . drupal_get_path('module', 'wb_tta') . "/views/");
}
if (!defined('TTA_CSS_PATH')) {
    define('TTA_CSS_PATH', drupal_get_path('module', 'wb_tta') . "/css/");
}
if (!defined('TTA_JS_PATH')) {
    define('TTA_JS_PATH', drupal_get_path('module', 'wb_tta') . "/js/");
}

module_load_include('inc', 'wb_tta', 'includes/wb_tta.admin');

/**
 * Implements hook_menu()
 * @return [type] [description]
 */

function wb_tta_menu() {
  $items = array();

  $items['ttaimport'] = array(
      'title' => 'TTA Routes',
      'description' => 'Manage Routes, Get TTA data and other stuff',
      'page callback' => 'system_admin_menu_block_page',
      'file' => 'system.admin.inc',
      'access callback' => TRUE,
      'file path' => drupal_get_path('module', 'system'),
    );

  $items['ttaimport/routes'] = array(
        'title' => 'Route PDFs',
        'description' => 'Configuration for GoCary GTFS Bus Routes',
        'page callback' => 'wb_tta_admin_form_callback',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'file' => 'includes/wb_tta.admin.inc'
  );

  $items['ttaimport/routes/create-services'] = array(
        'title' => 'Route PDFs',
        'description' => 'Configuration for GoCary GTFS Bus Routes',
        'page callback' => 'wb_tta_admin_form_callback_action',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'file' => 'includes/wb_tta.admin.inc'
  );
  return $items;
}




/**
 * Implements hook_services_resources().
 */


function wb_tta_services_resources() {
    return array(
        'wb_tta_agency' => array(
            'index' => array(
                'help' => 'Retrieves all the GTFS data per table',
                'file' => array('file' => 'inc', 'module' => 'wb_tta','name' => 'includes/all_wb_tta'),
                'callback' => '_wb_tta_agency_api_index',
                'args' => array(
                    array(
                        'name' => 'agency',
                        'type' => 'string',
                        'description' => 'The agency for data to retreive.',
                        'source' => array('param' => 'agency'),
                        'optional' => FALSE,
                    ),
                ),
                'access callback' => 'wb_tta_access_callback',
            ),
        ),
        'wb_tta_route_stops' => array(
            'index' => array(
                'help' => 'Retrieves all the GTFS data per table',
                'file' => array('file' => 'inc', 'module' => 'wb_tta','name' => 'includes/all_wb_tta'),
                'callback' => '_wb_tta_route_stops_api_index',
                'args' => array(
                    array(
                        'name' => 'route_id',
                        'type' => 'int',
                        'description' => 'The Route id for Route.',
                        'source' => array('param' => 'route_id'),
                        'optional' => TRUE,
                    ),
                    array(
                        'name' => 'agency',
                        'type' => 'string',
                        'description' => 'The agency for data to retreive.',
                        'source' => array('param' => 'agency'),
                        'optional' => FALSE,
                    ),
                ),
                'access callback' => 'wb_tta_access_callback',
            ),
        ),
        'wb_tta_route_trips_stops' => array(
            'index' => array(
                'help' => 'Retrieves all the GTFS data per table',
                'file' => array('file' => 'inc', 'module' => 'wb_tta','name' => 'includes/all_wb_tta'),
                'callback' => '_wb_tta_route_trips_stops_api_index',
                'args' => array(
                    array(
                        'name' => 'route_id',
                        'type' => 'int',
                        'description' => 'The Route id for Route.',
                        'source' => array('param' => 'route_id'),
                        'optional' => TRUE,
                    ),
                    array(
                        'name' => 'agency',
                        'type' => 'string',
                        'description' => 'The agency for data to retreive.',
                        'source' => array('param' => 'agency'),
                        'optional' => FALSE,
                    ),
                ),
                'access callback' => 'wb_tta_access_callback',
            ),
        ),
    );
}


function wb_tta_access_callback() {
  return TRUE;
}


function _wb_array_get($array, $keys) {
  $result = array();
  foreach ($keys as $key) {
   $result[$key] =  array_key_exists($key, $array)  ? $array[$key] : NULL;
  }

 $result = array_filter($result, function ($value) {
    return  !is_null($value);
    });
 return $result;
}
